package com.example.skillsphere.model;

import java.time.LocalDateTime;
import java.time.LocalTime;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity
public class Consultation {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @NotNull(message = "Title is required")
    @Size(min = 1, max = 255, message = "Title must be between 1 and 255 characters")
    private String title;

    @Size(max = 1000, message = "Description can be up to 1000 characters")
    private String description;

    @Min(value = 1, message = "Slots per user must be at least 1")
    @Max(value = 100, message = "Slots per user cannot exceed 100")
    private int slotsPerUser;

    @Min(value = 1, message = "Duration must be at least 1 minute")
    @Max(value = 1440, message = "Duration cannot exceed 1440 minutes (24 hours)")
    private int duration;

    @NotNull(message = "Call platform is required")
    @Size(min = 1, max = 100, message = "Call platform must be between 1 and 100 characters")
    private String callPlatform;

    @NotNull(message = "External link is required")
    @Pattern(
        regexp = "^(https://meet\\.google\\.com/|https://zoom\\.us/).*$",
        message = "Invalid external link. Only Google Meet or Zoom links are allowed."
    )
    private String externalLink;

    @NotNull(message = "Price is required")
    @Pattern(regexp = "^[0-9]+(\\.[0-9]{1,2})?$", message = "Price must be a valid number with up to two decimal places")
    private String price;

    @NotNull(message = "Start date is required")
    private LocalDateTime startDate;

    @NotNull(message = "End date is required")
    private LocalDateTime endDate;

    @NotNull(message = "Start time is required")
    private LocalTime startTime;

    @NotNull(message = "End time is required")
    private LocalTime endTime;
    
    
}

